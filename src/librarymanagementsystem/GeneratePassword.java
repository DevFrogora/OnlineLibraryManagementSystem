/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarymanagementsystem;

import java.awt.Color;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author root
 */
public class GeneratePassword extends javax.swing.JFrame {

    String email;
    String gen_backupkey;

    /**
     * Creates new form GeneratePassword
     */
    public GeneratePassword() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(38, 35, 35));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Email");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 100, 53));

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 255, 0));
        jButton1.setText("X");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 0, 50, 30));

        jButton2.setBackground(new java.awt.Color(255, 255, 51));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 51));
        jButton2.setText("Generate Password");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 283, -1, 40));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, 220, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 51));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, 470, 30));
        jLabel1.setVisible(Boolean.TRUE);

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setForeground(new java.awt.Color(0, 255, 204));
        jButton3.setText("<--BACK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tick.png"))); // NOI18N
        jLabel3.setMaximumSize(new java.awt.Dimension(25, 32));
        jLabel3.setMinimumSize(new java.awt.Dimension(25, 32));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 40, 30));
        jLabel3.setVisible(Boolean.FALSE);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Email");
        jLabel4.setVisible(false);
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 70, 30));

        jTextField2.setVisible(false);
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, 220, 40));

        jButton4.setBackground(new java.awt.Color(153, 255, 0));
        jButton4.setText("Check");
        jButton4.setVisible(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, 70, 30));

        jButton5.setBackground(new java.awt.Color(0, 255, 0));
        jButton5.setForeground(new java.awt.Color(255, 0, 0));
        jButton5.setText("Re-GenPassword");
        jButton5.setVisible(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, 140, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(638, 461));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            try {
                // TODO add your handling code here:
                LoginFrame.initialdbconnectionInfo();
            } catch (IOException ex) {
                Logger.getLogger(GeneratePassword.class.getName()).log(Level.SEVERE, null, ex);
            }
            //
            String gen_password = RandomString.getAlphaNumericString(5);
            String gen_backupkey = RandomString.getAlphaNumericString(10);
            Configs config = new Configs();
            config.storeProp("pwd.file", "Password", gen_password);
            config.storeProp("pwd.file", "Registered_Done", "true");
            Database db = new Database();
            int id = 1;
            email = jTextField1.getText().toString();
            String check1 = "select * from admin Where Email='" + email + "'";
            ResultSet rs1 = db.executeQuery(check1);
            try {
                if (rs1.next()) {

                    JOptionPane.showMessageDialog(null, "User Alerady Present (You can recover Your password) !");
                    jLabel2.setText("Backup Key");
                    jLabel4.setVisible(true);
                    jTextField2.setVisible(true);
                    jTextField2.disable();
                    jButton4.setVisible(true);

                } else {
                    String loginnew = "no";
                    String insert = "INSERT INTO admin (Email,BackupKey,Password,Login) VALUES('" + email + "','" + gen_backupkey + "','" + gen_password + "', '" + loginnew + "')";
                    db.executeUpdate(insert);
                    jLabel1.setText("!! Trying to send.. ");

                    jLabel1.setForeground(Color.red);
                    jLabel1.setVisible(Boolean.TRUE);
                    System.err.println(" password is :  " + config.getProp("pwd.file", "password"));
                    StringBuffer body
                            = new StringBuffer("<html><H1> <span style='background-color:green;'><b>Hey</b></span></H1><br>");
                    body.append("Library <b style='color:red;'>Admin</b> Password Generated .<br>");
                    body.append("<img src=\"https://media.discordapp.net/attachments/708724331517050931/713401834558980116/clipart174153.png\" width=\"10%\" height=\"10%\" /><br>");
                    body.append("Password is : <b style='color:blue;'>" + gen_password + "</b> <br> BackupKey is : <b style='color:blue;'>" + gen_backupkey + "</b> <br>");
                    body.append("Our Apk File link :  <a href=\"https://cdn.discordapp.com/avatars/360434951180779521/3c04a7959e8840187d8853cbfd9d8861.png?size=1024\">Library-Info.apk</a><br>");
                    body.append("<b style='color:pink;'>Thank You .</b>");
                    body.append("</html>");
                    Mailer.send(Utils.EMAIL, Utils.PASSWORD, jTextField1.getText().toString().trim(), "Library Password", body.toString());
                    jLabel1.setForeground(Color.GREEN);
                    jLabel1.setText("Password Sended to : " + jTextField1.getText().toString().trim() + " --- Check it out your email ");
                    // jLabel1.setVisible(Boolean.TRUE);
                    jLabel3.setVisible(Boolean.TRUE);
                    JOptionPane.showMessageDialog(null, id + ", priority message sended !");
                }
            } catch (Exception e) {

            }

        } catch (IOException ex) {
            Logger.getLogger(GeneratePassword.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        dispose();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    //setVisible(false);

                    new LoginFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(GeneratePassword.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            Database db = new Database();
            String check2 = "select * from admin Where Email='" + email + "'";
            ResultSet rs2 = db.executeQuery(check2);
            rs2.next();
            gen_backupkey = rs2.getString(3);
            if (gen_backupkey.equals(jTextField1.getText().toString().trim())) {

                jTextField2.enable();
                jButton5.setVisible(true);
                JOptionPane.showMessageDialog(null,  " valid !");
                jButton2.setVisible(false);

            }else{
            JOptionPane.showMessageDialog(null,  " Not Valid key !");
            }

        } catch (Exception ex) {
            Logger.getLogger(GeneratePassword.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        try {
            // TODO add your handling code here:
            int id = 1;
            Database db = new Database();
            String gen_password = RandomString.getAlphaNumericString(5);
            gen_backupkey=jTextField1.getText().toString();
            String email = jTextField2.getText().toString();
            String check2 = "update admin set Password='" + gen_password + "' Where Email='"+ email+"'";
            db.executeUpdate(check2);
            StringBuffer body
                    = new StringBuffer("<html><H1> <span style='background-color:green;'><b>Hey</b></span></H1><br>");
            body.append("Library <b style='color:red;'>Admin</b> Password Generated .<br>");
            body.append("<img src=\"https://media.discordapp.net/attachments/708724331517050931/713401834558980116/clipart174153.png\" width=\"10%\" height=\"10%\" /><br>");
            body.append("Password is : <b style='color:blue;'>" + gen_password + "</b> <br> BackupKey is : <b style='color:blue;'>" + gen_backupkey + "</b> <br>");
            body.append("Our Apk File link :  <a href=\"https://cdn.discordapp.com/avatars/360434951180779521/3c04a7959e8840187d8853cbfd9d8861.png?size=1024\">Library-Info.apk</a><br>");
            body.append("<b style='color:pink;'>Thank You .</b>");
            body.append("</html>");
            Mailer.send(Utils.EMAIL, Utils.PASSWORD, jTextField2.getText().toString().trim(), "Reset Library Password", body.toString());
            jLabel1.setForeground(Color.GREEN);
            jLabel1.setText("Password Sended to : " + jTextField2.getText().toString().trim() + " --- Check it out your email ");
            // jLabel1.setVisible(Boolean.TRUE);
            jLabel3.setVisible(Boolean.TRUE);
            JOptionPane.showMessageDialog(null,  " again sended !");

        } catch (Exception ex) {
            Logger.getLogger(GeneratePassword.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneratePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneratePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneratePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneratePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        // Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneratePassword().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}

class RandomString {

    static String getAlphaNumericString(int n) {

        // chose a Character random from this String
        String AlphaNumericString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                + "0123456789"
                + "abcdefghijklmnopqrstuvxyz";

        // create StringBuffer size of AlphaNumericString
        StringBuilder sb = new StringBuilder(n);

        for (int i = 0; i < n; i++) {

            // generate a random number between
            // 0 to AlphaNumericString variable length
            int index
                    = (int) (AlphaNumericString.length()
                    * Math.random());

            // add Character one by one in end of sb
            sb.append(AlphaNumericString
                    .charAt(index));
        }

        return sb.toString();
    }
}
